30 September 2021

- solution properties -> cuda c/c++ -> device -> 
  code generation fill in compute_30,sm_30 instead of 35 
  (compute capability 3.0 on my GTX750M)
- NVIDIA CUDA 10.1 fits to my GPU driver of 725.something

SFML setup:
- put SFML in some directory, e.g. C:\SFML-2.5.1-64bit, 
  configure include + linker input&lib dirs in solution properties
- copy-paste SFML bin all around your solution directory until it works LOL

4 October 2021
- WARNING: in Debug mode, sf::Clock.getElapsedTime().asMicroseconds() does not work,
  needs to be commented out!
- enabled multi-processor compilation under Solution Properties -> C++ -> General
- setup of Controller class, update loop in Controller::run()
- will probably skip view in MVC pattern, model will simply
  render its image, have to see how that works with CUDA
- FPS display + moving average
- ~100 FPS 1366x768 full-screen with just drawing a black sprite over and over
- ~750 FPS 300x300

5 October 2021
- somehow yesterday the project switched to using the normal compiler and not nvcc anymore...
- couldn't compile any CUDA code
- needed to start a new project, set up everything and copy the code
- template for cuda+sfml projects saved
- problems with calling a cuda function from outside main.cu, will try out some more in 
  \FreeTimeProjects\CUDA101Try
- kernel functions should not be class members, no .ih files
- ~400 FPS 300x300 with drawing each pixel on GPU, but always copying data to and from it
- ~500 FPS 300x300 with model having pointer to GPU memory, only copy from GPU once image is done


